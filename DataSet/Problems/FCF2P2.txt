
The problem statement in this and the 'Easy' version is exactly the same. The only difference is in the constraints.
sibasish_14 is going to retire from problemsetting for IIIT-Bh's Competitive  Coding Club(C3)(C3) after Fastest Code First 2.0. So, now it's upto pritishn to choose a replacement for him. The viable options are niket_301 and cryptobrat.   
However, cryptobrat is busy making projects for his CV/Resume and niket_301 is busy playing Skyrim. So both of them are hesitant to do problemsetting voluntarily.
So, pritishn has decided to do the following to choose the next problem setter:

Take a N×NN×N matrix (rows numbered from 1 to N top to bottom and columns numbered from 1 to N left to right). 
Each cell of the matrix has one of the three characters 'D', 'L' and 'R'.
Now he will put a robot on any of the cells  (randomly chosen) in the first row and the robot will move according to the character written on the cell it's standing on.
For each cell (i,j) :
if the character is 'D' , the robot will move to cell (i+1,j) from this cell.
if the character is 'L' , the robot will move to cell (i,j−1) from this cell.
if the character is 'R' , the robot will move to cell (i,j+1) from this cell.  
The robot will not move out of the matrix. If a cell has a character that tells robot to move out of the cell , then the robot will stop there.
It's guaranteed that there's no cell (i,j) such that this cell has 'R' and cell (i,j+1) has 'L' .

Let the cell that the robot stops at be (i,j) . If i+j is an even number, then niket_301 will be chosen otherwise cryptobrat will be chosen.
You are given the matrix , print out the number of cells in the first row that will lead to choosing niket_301.

Input:

First line will contain T, number of testcases. Then the testcases follow. 
The first line of each test case contains an integer N .
The next N lines each has a string of length N.
The jth character of the ith string represents the character in the cell (i,j)


Output:
For each testcase, output in a single line the number of cells in the row 1 that will lead to choosing niket_301.

Constraints

1≤T≤1000
1≤N≤1000
Sum of N over all test cases doesn't exceed 1000.


Sample Input:
1
5
RRRDD
RDDLD
RDDDR
DDLRD
RDLLR

Sample Output:
1

EXPLANATION:
Starting from cell (1,1),(1,2),(1,3),(1,4) we end up at cell (5,2) , so all these cells will lead to choosing cryptobrat.
Starting with cell (1,5) we end up at cell (3,5), so only this cell will lead to choosing niket_301.



Author:
5★pritishn


Editorial:
https://discuss.codechef.com/problems/FCF2P2


Tags:

               
                 depth-first-search, dynamic-programming, easy, fcf22020, pritishn, pritishn
                 
               
             
             



                        Difficulty Rating:
                    

N/A


Date Added:
27-07-2020


Time Limit:
1 secs


Source Limit:
50000 Bytes


Languages:
CPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM





Submit

