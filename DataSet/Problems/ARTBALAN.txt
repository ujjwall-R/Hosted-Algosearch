
Read problem statements in Hindi, Bengali, Mandarin Chinese, Russian, and Vietnamese as well.
"Everything in the universe is balanced. Every disappointment you face in life will be balanced by something good for you! Keep going, never give up."
Let's call a string balanced if all characters that occur in this string occur in it the same number of times.
You are given a string SS; this string may only contain uppercase English letters. You may perform the following operation any number of times (including zero): choose one letter in SS and replace it by another uppercase English letter. Note that even if the replaced letter occurs in SS multiple times, only the chosen occurrence of this letter is replaced.
Find the minimum number of operations required to convert the given string to a balanced string.
Input

The first line of the input contains a single integer T denoting the number of test cases. The description of T test cases follows.
The first and only line of each test case contains a single string S.

Output
For each test case, print a single line containing one integer ― the minimum number of operations.
Constraints

1≤T≤10,000
1≤|S|≤1,000,000
the sum of |S| over all test cases does not exceed 5,000,000
S contains only uppercase English letters

Subtasks
Subtask #1 (20 points):

T≤10
|S|≤18

Subtask #2 (80 points): original constraints

                        Sample Input 1
                        





2
ABCB
BBC



                        Sample Output 1
                        





1
1


Explanation
Example case 1: We can change 'C' to 'A'. The resulting string is "ABAB", which is a balanced string, since the number of occurrences of 'A' is equal to the number of occurrences of 'B'.
Example case 2: We can change 'C' to 'B' to make the string "BBB", which is a balanced string.



Author:
5★prnjl_rai


Editorial:
https://discuss.codechef.com/problems/ARTBALAN


Tags:

               
                 String, Divisors
                 
                     
                     Data Structures, Mathematics, Number Theory, Integer Factorisation
                 
               
             
             



                        Difficulty Rating:
                    

1788


Date Added:
28-01-2019


Time Limit:
1 secs


Source Limit:
50000 Bytes


Languages:
PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM





Submit

