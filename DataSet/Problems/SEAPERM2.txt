
 Read problems statements in Mandarin Chinese  and Russian.


Sereja have permutation p[1], p[2], ..., p[n]. Sereja have made n permutations q[1], q[2], ..., q[n], q[i] is permutation p without element i (we subtract 1 from all elements bigger than i). For example 8 1 2 3 4 5 6 7 without 5 is 7 1 2 3 4 5 6. Sereja have made random shuffle of q. Help Sereja find initial permutation p.

Input
First line contain number of test cases T. T tests follow. First line of each test case contain number n. Next n lines describe permutations q[1], q[2], ..., q[n]. Each line contain n-1 number. It is guarantied that there is at least one solution for each test case.
 
Output
For each test output permutation p. If there is more than one solution - output any.
 
Constraints

1 ≤ T ≤  10 
3 ≤ n ≤  300 

 
Subtasks

Subtask #1: 3 ≤ n ≤  6  (13 points)
Subtask #2: 3 ≤ n ≤  50  (27 points)
Subtask #3: 3 ≤ n ≤  300  (60 points)

 
Example
Input:
1
3
1 2
1 2
1 2

Output:
1 2 3


 



Author:
sereja_adm


Editorial:
https://discuss.codechef.com/problems/SEAPERM2


Tags:

               
                 ad-hoc, Hashing
                 
                     
                     Algorithms, Constructive
                 
               
             
             



                        Difficulty Rating:
                    

2436


Date Added:
10-09-2014


Time Limit:
4 secs


Source Limit:
50000 Bytes


Languages:
PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, BASH, JS, LISP sbcl, PAS gpc, BF, CLOJ, D, CAML, FORT, ASM, FS, WSPC, LISP clisp, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, PIKE, SCM qobi, ST, NEM





Submit

