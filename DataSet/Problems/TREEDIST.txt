
You are given a tree consisting of NN nodes. The nodes are numbered from 11 to NN. The tree is rooted at the node 1. 
A tree is a connected undirected graph with N−1 edges.
Find the sum of the distance between nodes x and y over all tuples (u,v,x,y) satisfying the following conditions:
1) u<v
2) u is the ancestor of node x and v is the ancestor of node y.
3) Neither of u or v is the ancestor of the other.
Since the sum can be enormous, print it modulo (109+7).
Note:

The distance between two nodes of a tree is the number of edges in the shortest path between these two nodes.
Node x is considered to be the ancestor of y if x lies on the path from 1 to y.
Usually, there is no bound on the stack memory and is equal to the total memory limit of 1.5 GB. But due to a system configuration issue, the stack limit for C++ is temporarily set to 8 MB. So, if you believe that your code requires a larger stack limit, please include this in your code.

Input Format

The first line of the input contains a single integer T denoting the number of test cases. The description of T test cases follows.
The first line of each test contains an integer N, denoting the number of nodes in the tree.
N−1 lines follow. The ith of these lines contains two space-separated integers ui and vi, denoting an edge between the nodes ui and vi.

Output Format
For each test case, output in a single line the sum obtained modulo (109+7).
Constraints

1≤T≤2000
1≤N≤105
1≤ui,vi≤N
It is guaranteed that the given nodes and edges construct a tree.
The sum of N over all test cases does not exceed 106


                        Sample Input 1
                        





4
3
1 2
2 3
3
1 2
1 3
5
1 2
2 3
3 4
2 5
6
1 2
1 3
3 4
2 5
2 6



                        Sample Output 1
                        





0
2
8
54


Explanation
Test case 1: There is no such tuple satisfying the constraints.
Test case 2: (2,3,2,3) is the only valid tuple and distance between node 2 and node 3 is 2.



Author:
6★satyam_343


Editorial:
https://discuss.codechef.com/problems/TREEDIST


Tags:

               
                 Trees, DP on Trees, Dynamic Programming, DFS
                 
                     
                     Data Structures, Graphs, Advanced Algorithms, Advanced DP, Algorithms, Graph Algos, Traversals
                 
               
             
             



                        Difficulty Rating:
                    

3185


Date Added:
26-08-2021


Time Limit:
1 secs


Source Limit:
50000 Bytes


Languages:
CPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM





Submit

