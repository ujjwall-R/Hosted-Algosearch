
Permutation P is an ordered set of integers P1, P2,  ..., PN, consisting of N distinct positive integers, each of them doesn't exceed N. We'll denote the ith element of permutation P as Pi. We'll call number N the size or the length of permutation P1, P2,  ..., PN.
You have a sequence of integers A1, A2,  ..., AN. In one move, you are allowed to decrease or increase any number by one. Count the minimum number of moves, needed to build a permutation from this sequence.
Input
The first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows.
The first line of each test case contains an integer  N — the size of the sought permutation.
The second line of each test case contains N space separated integers A1, A2,  ..., AN.
Output
For each test case, print a single number — the minimum number of moves.

Constraints

1 ≤ T ≤ 105
1 ≤ N ≤ 3*105
-109 ≤ Ai ≤ 109

Example
Input:
2
2
3 0
3
-1 -1 2
Output:
2
6

Explanation
Example case 1.  You should decrease the first number by one and then increase the second number by one. The resulting permutation is (2, 1).
Example case 2.  You need 6 moves to build permutation (1, 3, 2).



Author:
2★puneetguptaa


Editorial:
https://discuss.codechef.com/problems/CDX1604


Tags:

               
                 easy, greedy, implementation, puneetguptaa, sorting
                 
               
             
             



                        Difficulty Rating:
                    

N/A


Date Added:
12-07-2016


Time Limit:
1 secs


Source Limit:
50000 Bytes


Languages:
PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, BASH, JS, LISP sbcl, PAS gpc, BF, CLOJ, D, CAML, FORT, ASM, FS, WSPC, LISP clisp, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, SCM chicken, PIKE, SCM qobi, ST, NEM





Submit

