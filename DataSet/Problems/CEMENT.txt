
A Cement Factory has been set up by the Ashutosh Pratap.  In this Factory there are NN stations for transport of cement from one chamber to another chamber. Each Chamber or Each station has a specific height hihi  and each adjacent station are separated by some distance didi . d1=distance between building 2 and 1 . So you have two arrays one having N heights of the stations in the factory and another array of N-1 numbers denoting the distance between two adjacent elements of the previous array.  where di= distance between i+1th station and ith station.
Now as you have gone through the concepts of Gravity so hired mechanical engineers arbitrarily build passing chambers which support transportation between any pair of stations . As the decision was very quick so they build T transportation gateways between some stations. Each such transportation gateway is denoted by u to v . But here when a sack of cement goes from station u to v then total cost spent is (hv-hu)*(distance between station u and station v). 
Now when cement sack flows down it looses energy and it is in free small so instead of spending some positive amount it will get something while going down. Thus flowing up and flowing down might cost you not the same always.
Also you know that from which building to which other building you can transport the sack of cement. 
Now Ashutosh hired you as a computer science engineer to solve his problem of finding minimum amount he will spent  in transporting a cement sack from a src source to any other station Si which he gives you in the form of S queries. and in each query he asks you what is the minimum amount of transporting of cement sack from src source to the given station in the query Si.
If the amount can be infinitely minimum then simply output -1 as the answer for all query. 
If the cement sack cannot reach from src station to Si station anyhow then simply output 1000000000000. Amount to transport a cement sack from source to source maybe 0 if and only if no other minimum cost is possible.
Remember u to v is not same as transportation gateway between v to u.
Input:

First line will contain N, number of stations. Then the next line follow. 
N numbers hi separated by space denoting the height of the stations Next line contains. 
N−1 numbers di separated by space denoting the distance between the stationi+1 and i  Next line contains. 
-T denoting the total number of transportation gateways. Then the next line follow. 
description of T transportation gateways in T lines which contain two space separated numbers,u v denoting the station numbers in between there is a transportation gateway. Then the next line follow. 
src source of the starting transportation station Then the next line contains.
S number of queries for minimum cost from src station to the query station. Next lines follow description of queries.
This line contains S space separated  numbers Si denoting the destination station.

Output:
For each S queries find the minimum cost to transport sack of cement from src source to destination Si
Constraints

1≤N≤1000
1≤hi≤108
0≤di≤105
1≤T≤105
1≤u,v≤N
1≤src≤N
1≤S≤105
1≤Si≤N

Sample Input:
    4
    1 4 3 2
    2 3 5
    4
    1 2 
    2 3
    2 4
    1 4
    1
    4
    1 2 3 4

Sample Output:
    0
    6
    3
    -10

EXPLANATION:
Observe it Yourself! Best of Luck!!



Author:
4★aayushindwan


Editorial:
https://discuss.codechef.com/problems/CEMENT


Tags:

               
                 aayushindwan, bellman-ford, dynamic-programming, strt2020
                 
               
             
             



                        Difficulty Rating:
                    

N/A


Date Added:
19-02-2020


Time Limit:
1 secs


Source Limit:
50000 Bytes


Languages:
PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM





Submit

