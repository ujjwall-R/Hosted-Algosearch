
Read problems statements in Mandarin Chinese, Russian and Vietnamese as well.
You are given a rooted tree consisting of n nodes, numbered 1 through n. Each of the nodes has an integer Ai assigned to it.
Let's define children(v) as a sequence of the children of v placed in the increasing order of their ids. Let's define children(v, d) as the following:
 

children(v, 0) = [v]
children(v, 1) = children(v)
children(v, d) = children(children(v)[1], d - 1) + children(children(v)[2], d - 1) + ... + children(children(v)[|children(v)|], d - 1) if d > 1

 
Here '+' denotes concatenation of two sequences and children(v)[i] denotes accessing the i'th element of children(v).
Let's define bitTwister(x, y) function using the following code snippet written in Python:

def bitTwister(x, y):
  x ^= x >> 11
  x ^= (x << 7) & 2636928640
  x ^= (x << 15) & 4022730752
  x ^= (x >> 18)
  return (1812433253 * (x ^ (x >> 30)) + y) & 4294967295

 
Let's define reducedByBitTwister(X1, X2, ..., Xk) as following:

reducedByBitTwister(X1) = X1
reducedByBitTwister(X1, ..., Xk - 1, Xk) = bitTwister(reducedByBitTwister(X1, ..., Xk - 1), Xk) if k > 1

Your are asked to process q queries of the following kind:
Your are given two integers v and d (1 ≤ v ≤ n). For convenience, let's denote children(v, d) as a node sequence V1, V2, ..., Vk. Your should calculate reducedByBitTwister(AV1, ..., AVk). It's guaranteed, that children(v, d) is a non-empty sequence for each query.
Input
The first line of the input contains an integer T denoting the number of test cases.
The first line of the test case description contains two integers n and q. The next line contains n integers denoting A1, A2, ..., An. The next line contains n - 1 integers P2, ..., Pn denoting, that Pi is the direct ancestor of i. The first node of the tree is the root, so it has no ancestors.
Each of the next q lines contains two integers v and d denoting a query to process.
Output
For each of the queries, output the result on a separate line.
Constraints
 

1 ≤ T ≤ 4
1 ≤ n ≤ 100000
1 ≤ q ≤ 300000
0 ≤ Ai < 232
1 ≤ Pi < i

 

                        Sample Input 1
                        





1
10 10
2433124241 332550764 3458320162 869965676 3840323658 3515151768 3271951378
246136236 1976704004 1673162377
1 2 3 2 2 3 7 1 7
10 0
5 0
1 3
7 0
10 0
9 0
5 0
2 2
6 0
1 1



                        Sample Output 1
                        





1673162377
3840323658
2025664556
3271951378
1673162377
1976704004
3840323658
2025664556
3515151768
2552768825


Explanation
Here's an image of the tree from the example case:




Author:
6★kostya_by


Tester:
4★pavel1996


Editorial:
https://discuss.codechef.com/problems/BITTWIST


Tags:

               
                 cook69, kostya_by, medium-hard, sqrt-decomp
                 
               
             
             



                        Difficulty Rating:
                    

2986


Date Added:
26-03-2016


Time Limit:
4 secs


Source Limit:
50000 Bytes


Languages:
PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, BASH, JS, LISP sbcl, PAS gpc, BF, CLOJ, D, CAML, FORT, ASM, FS, WSPC, LISP clisp, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, SCM chicken, PIKE, SCM qobi, ST, NEM





Submit

