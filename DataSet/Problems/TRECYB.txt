
Let AA be an array of NN elements and let us define beauty of array as (consider 1 based indexing)
long long int beauty(int N, int A[]){
     long long int val = 0;
     for(int i = 1; i < N; i++){
           for(int j = i + 1; j <= N; j++){
                 if(a[i] < a[j]){val++;}
                 else{val--;}
           }
     }
     return val;
}

Let G be a tree with N nodes numbered from 1 to N rooted at node 1. Find the Expected Beauty of all the valid BFS(BreadthFirstSearch) of G.
Expected beauty of a BFS can be calculated using above function considering visiting order as elements of the array.
Input:

First line will contain N, the number of nodes. 
This will be followed by N−1 lines each containing two space-separated integers a, b denoting that their is an edge between nodes a and b.

Output:

On a single line, print a real number, the answer to the problem. Your answer will be considered correct if its absolute or relative error does not exceed 10−6. Formally, if your answer is a and the jury's answer is b, your answer will be accepted if |a−b|max(1,b)≤10−6.

Constraints:

1≤N≤2∗105

Sample Input
3
1 2
1 3

Expected Output
2.000000
Explanation:
Valid BFSs are 1 2 3 — beauty = 3; and 1 3 2 — beauty = 1.
So, Expected Beauty is equal to 12∗3+12∗1=2.000.



Author:
5★hackcyborg


Editorial:
https://discuss.codechef.com/problems/TRECYB


Tags:

               
                 Contribution Trick, BFS
                 
                     
                     Mathematics, Probability, Expected Value, Algorithms, Graph Algos, Traversals
                 
               
             
             



                        Difficulty Rating:
                    

2732


Date Added:
16-12-2020


Time Limit:
1 secs


Source Limit:
50000 Bytes


Languages:
CPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM





Submit

