
 Read problems statements in Mandarin Chinese, Russian and Vietnamese as well.
You initially start with a binary string S0 which is of length N and has all 0s. You are then given U updates, which keep transforming the string. The i-th update transforms the string Si-1 into Si, and hence after all the U updates you will be left with SU.
A single update is of the form (Li, Ri), which means that all the 1s in the range [Li, Ri] (both end points included) should be changed into 0s, and all the 0s in that range should be changed to 1s.
You need to find out which among the U+1 binary strings: S0, S1, .., SU, is lexicographically the largest, and print that string.
Input

The first line of the input contains two integers, N, and U, denoting the length of the string and number of updates respectively. 
The i-th of the next U lines contains two integers, Li and Ri, which denotes that the i-th update is to swap all the values in the string which fall between the indices Li and Ri (both inclusive). 
Output
Output a single line containing one binary string - the lexicographically largest string among the U+1 strings.
Constraints

1 ≤ N, U ≤ 100,000
1 ≤  Li  ≤  Ri  ≤ N

Subtasks

Subtask #1 (20 points): 1 ≤ N ≤ 2000
Subtask #2 (80 points): Original constraints.


                        Sample Input 1
                        





10 10
9 10
6 10
9 10
1 8
3 5
3 3
3 4
3 9
4 8
7 7



                        Sample Output 1
                        





1111100011


Explanation
Let us see what happens in each operation:
S0 = 0000000000
After the update, [9, 10], it becomes S1 = 0000000011
After the update, [6, 10], it becomes S2 = 0000011100
After the update, [9, 10], it becomes S3 = 0000011111
After the update, [1, 8], it becomes  S4  = 1111100011
After the update, [3, 5], it becomes  S5  = 1100000011
After the update, [3, 3], it becomes  S6  = 1110000011
After the update, [3, 4], it becomes  S7  = 1101000011
After the update, [3, 9], it becomes  S8  = 1110111101
After the update, [4, 8], it becomes  S9  = 1111000001
After the update, [7, 7], it becomes S10 = 1111001001

The lexicographically largest among these is 1111100011 and so, that is the answer.



Author:
7★gainullinildar


Tester:
6★melfice


Editorial:
https://discuss.codechef.com/problems/SUBINVER


Tags:

               
                 Persistent Segment Trees, Bitwise Operation, Hashing
                 
                     
                     Advanced Data Structures, Persistent Structures, Mathematics, Bit Manipulation, Algorithms
                 
               
             
             



                        Difficulty Rating:
                    

N/A


Date Added:
26-05-2017


Time Limit:
3 secs


Source Limit:
50000 Bytes


Languages:
PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, BASH, JS, LISP sbcl, PAS gpc, BF, CLOJ, D, CAML, FORT, ASM, FS, WSPC, LISP clisp, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, SCM chicken, PIKE, SCM qobi, ST, NEM





Submit

