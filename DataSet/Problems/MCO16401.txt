
 

Flippy the bird has a permutation p of length n while Fluffy the squirrel has a permutation q of length n. Flippy the bird wants his permutation to be the same as Fluffy's permutation. He can cut the permutation into several parts, and rearrange those parts so that the resulting permutation is equal to q. He wants to cut the permutation into the minimum possible number of pieces. Can you help him determine the minimum number of pieces he needs to cut the permutation into?

 
Input
The first line contains a single integer n, the length of the sequence. The next line contains n space-seperated integers, p1, p2, ..., pn. It is guaranteed that these numbers are a permutation of 1, 2, ..., n. The next line contains n space-seperated integers, q1, q2, ..., qn. It is guaranteed that these numbers are a permutation of 1, 2, ..., n
 
Output
Output a single integer, the minimum number of pieces that Flippy needs to cut to form Fluffy's permutation. (Note that if Flippy doesn't cut, the number of pieces is 1)
 
Constraints

1 ≤ n ≤ 300000

Subtasks

Subtask 1 (45 points) : qi = i for all i
Subtask 2 (55 points) : Original Constraints

 
Example
Input:
5
3 2 1 4 5
2 3 1 4 5
Output:
3

 
Explanation
Example case. One can cut the permutation p into 3 parts, [3], [2], [1, 4, 5], and then rearrange it into [2], [3], [1, 4, 5], which is the permutation q.




Author:
6★zscoder


Editorial:
https://discuss.codechef.com/problems/MCO16401


Tags:

               
                 cakewalk, greedy, zscoder
                 
               
             
             



                        Difficulty Rating:
                    

N/A


Date Added:
22-11-2016


Time Limit:
 - 1 secs


Source Limit:
50000 Bytes


Languages:
PYTH 3.6, JAVA, CPP14, PYTH, PYP3





Submit

