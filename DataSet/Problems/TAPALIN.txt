

Do you know that The Chef has a special interest in palindromes? Yes he does! Almost all of the dishes in his restaurant is named by a palindrome strings. The problem is that a name of a dish should not be too long, so The Chef has only limited choices when naming a new dish.


For the given positive integer N, your task is to calculate the number of palindrome strings of length not exceeding N, that contain only lowercase letters of English alphabet (letters from 'a' to 'z', inclusive). Recall that a palindrome is a string that reads the same left to right as right to left (as in "radar").


For example:
For N = 1, we have 26 different palindromes of length not exceeding N: "a", "b", ..., "z".
For N = 2 we have 52 different palindromes of length not exceeding N: "a", "b", ..., "z", "aa", "bb", ..., "zz".
For N = 3 we have 728 different palindromes of length not exceeding N: "a", "b", ..., "z", "aa", "bb", ..., "zz", "aaa", "aba", ..., "aza", "bab", "bbb", ..., "bzb", ..., "zaz", "zbz", ..., "zzz".

Since the answer can be quite large you should output it modulo 1000000007 (109 + 7). Yes, we know, most of you already hate this modulo, but there is nothing we can do with it :)

Input

The first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows. The only line of each test case contains a single integer N.

Output

For each test case, output a single line containing the answer for the corresponding test case.

Constrains
1 ≤ T ≤ 1000
1 ≤ N ≤ 109


                        Sample Input 1
                        





5
1
2
3
4
100



                        Sample Output 1
                        





26
52
728
1404
508533804


Explanation

The first three examples are explained in the problem statement above.




Author:
tuan_adm


Tester:
6★anton_lunyov


Editorial:
https://discuss.codechef.com/problems/TAPALIN


Tags:

               
                 String, Modular Exponentiation, Fermat's Little Theorem, Modulo Multiplicative Inverse, GP, Matrix Exponentiation
                 
                     
                     Data Structures, Mathematics, Modular Arithmetic, Sequences and Progression, Matrices, Matrix Multiplication
                 
               
             
             



                        Difficulty Rating:
                    

1788


Date Added:
26-01-2013


Time Limit:
1 secs


Source Limit:
50000 Bytes


Languages:
PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, BASH, JS, LISP sbcl, PAS gpc, BF, CLOJ, D, CAML, FORT, ASM, FS, WSPC, LISP clisp, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, PIKE, SCM qobi, ST, NEM





Submit

