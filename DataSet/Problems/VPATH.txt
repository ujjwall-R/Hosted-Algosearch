
Read problem statements in Bengali, Mandarin Chinese, Russian, and Vietnamese as well.
You are given a tree with NN nodes numbered from 11 to NN. A set S of nodes is called valid if there exist two vertices u and v (possibly, u=v) such that every node in S lies on the simple path from u to v.
Count the number of valid sets modulo 109+7. Two sets are different if one node is included in one set and not in the other. If there are multiple pairs (u,v) making a set valid, that set is still only counted once.
Input

The first line contains an integer T, the number of test cases. Then the test cases follow. 
Each test case contains N lines of input.
The first line contains a single integer N, the number of tree nodes. 
Each of the next N−1 lines contains two space-separated integers u and v representing an edge between nodes u and v. 

Output
For each test case, output in a single line the number of valid sets modulo 109+7.
Constraints

1≤T≤50
1≤N≤105
1≤u,v≤N
Sum N over all testcases is at most 5⋅105.
The given input is a valid tree.

Subtasks
Subtask #1 (20 points): 

1≤T≤10
1≤N≤3⋅103

Subtask #2 (80 points): Original Constraints

                        Sample Input 1
                        





2
4
1 2
3 1
2 4
4
1 2
2 3
2 4



                        Sample Output 1
                        





15
13


Explanation
Test Case 1: Every non-empty set is valid.
Test Case 2: The valid sets are {1}, {2}, {3}, {4}, {1,2}, {1,3}, {1,4}, {2,3}, {2,4}, {3,4}, {1,2,3},  {1,2,4}, {2,3,4}.



Author:
daanish_adm


Editorial:
https://discuss.codechef.com/problems/VPATH


Tags:

               
                 Combinatorics, DFS
                 
                     
                     Mathematics, Algorithms, Graph Algos, Traversals
                 
               
             
             



                        Difficulty Rating:
                    

2061


Date Added:
26-12-2020


Time Limit:
1 secs


Source Limit:
50000 Bytes


Languages:
CPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM





Submit

