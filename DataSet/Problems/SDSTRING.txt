
Read problems statements in Hindi, Mandarin Chinese, Russian, Vietnamese, and Bengali as well.
A binary string is called a self-destructing string if it can reduced to an empty string by performing the following operation some number of times (possibly zero): Choose a valid integer ii such that the ii-th character of the current string is different from the i+1i+1-th character, and remove these two characters from the string.
You are given a binary string s. Your task is to convert s to a self-destructing string. To do that, you may perform the following operation any number of times (possibly zero): Choose an integer i (1≤i≤|s|−1) such that the i-th character of s is different from the i+1-th character, and invert one of these characters (inverting a character means changing '0' to '1' or '1' to '0', e.g. the string "01" can be changed to "00").
Find the smallest number of operations required to convert s to a self-destructing string or determine that it is impossible.
Input

The first line of the input contains a single integer T denoting the number of test cases. The description of T test cases follows.
The first and only line of each test case contains a single string s.

Output
For each test case, print a single line containing one integer ― the smallest required number of operations or −1 if it is impossible to convert s to a self-destructing string.
Constraints

1≤T≤1,000
1≤|s|≤106
s contains only characters '0' and '1'
the sum of |s| over all test cases does not exceed 106


                        Sample Input 1
                        





3
001101
1101
110



                        Sample Output 1
                        





0
1
-1


Explanation
Example case 1: We already have a self-destructing string because "001101" can be converted to "0101", to "01" and finally to an empty string.
Example case 2: We can choose i=3 (since s3≠s4) and then invert s4 to obtain "1100", which is a self-destructing string.
Example case 3: It can be shown that "110" cannot be converted to a self-destructing string.



Author:
6★jeevanjyot


Editorial:
https://discuss.codechef.com/problems/SDSTRING


Tags:

               
                 Stacks, String
                 
                     
                     Data Structures
                 
               
             
             



                        Difficulty Rating:
                    

1648


Date Added:
11-12-2020


Time Limit:
1 secs


Source Limit:
50000 Bytes


Languages:
CPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM





Submit

