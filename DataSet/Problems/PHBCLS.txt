
Phoebe starts her own fitness class. There are NN people standing in a row waiting to start their exercise. The ithith person is standing at point XiXi where 1≤i≤n1≤i≤n. The length of the hands of each person is fixed as K units.  
 
Each person exercises by raising their hands to the side. Now phoebe wants the exercise to be Perfect. Perfect exercise is possible if there is no overlapping of hands between two persons when they raise their hands side by side. An example of Perfect exercise is :   
 
And if the hands are overlapping then it is Imperfect exercise. For example :   
 
If the hands of two people are only touching i.e. if A+k=B−k then this is not considered as overlapping. Now you have to output if the given set of positions with hand length K is Perfect or Imperfect.  
Input:
The first line of the input contains a single integer Q i.e the number of queries. Then, Q lines follow. Each query consists of two lines.
The first line of each query contains the value of N and K. The second line of each query contains N space-separated integers denoting Xi which is the position of ith person.  
Output:
For each query, output "Perfect" in a single line if it is possible to do the exercise without overlapping. Or else, output "Imperfect" in a single line.
Constraints

1≤T≤10
1≤N≤105
1≤K≤109
0≤Xi≤109

Sample Input:
2
3 1
6 1 3
3 1
6 1 2

Sample Output:
Perfect
Imperfect

EXPLANATION:
In the second example, the second and third person's hands will overlap. Therefore it is imperfect.



Author:
recursionnitd


Editorial:
https://discuss.codechef.com/problems/PHBCLS


Tags:

               
                 reco2020, recursionnitd, sorting
                 
               
             
             



                        Difficulty Rating:
                    

N/A


Date Added:
6-01-2020


Time Limit:
1 secs


Source Limit:
50000 Bytes


Languages:
PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM





Submit

