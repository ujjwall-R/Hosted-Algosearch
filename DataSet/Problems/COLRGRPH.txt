
Read problems statements in Mandarin Chinese, Russian, Vietnamese and Bengali as well.
This is an interactive problem.
There is a hidden undirected graph with n vertices. There are no self-loops or multiple edges. Each vertex is colored black or white, and the colors are also hidden from you.
To make a query, you choose a vertex v. The interactor will respond with the current color of v, and then it will flip the colors of all vertices adjacent to v. A vertex is not considered adjacent to itself, so the color of v doesn't change.
After at most 6000 queries, find the adjacency matrix of the graph.
Note: The interactor is not adaptive. In other words, the graph and colors are fixed in the beginning.
Interaction
Begin the interaction by reading a single integer n - the number of vertices in the graph.
To ask a query, output "? v" for a vertex v (1≤v≤n). Then read a single character describing the current color of v, where "B" denotes black and "W" denotes white. After making this query, the colors of all vertices adjacent to v will flip.
To print the answer, output "!" then on the next n lines print n strings of length n, consisting of symbols "0" and "1". The j-th character of the i-th string should be "1" if and only if there is an edge between vertices i and j. Since there are no self-loops, the main diagonal should contain only "0".
If at any time you make an invalid query or exceed the query limit, the interaction is terminated and you will receive a Wrong Answer verdict.
Remember to flush the output after printing each line!
Constraints

1≤n≤100


                        Sample Input 1
                        





3

W

B

B

W



                        Sample Output 1
                        





? 1

? 2

? 3

? 2

!
001
001
110


Explanation
The example is given to demonstrate how the queries work, and it is not guaranteed that the answer can be uniquely determined from the queries in the example.
The hidden graph is a path 1−3−2. Initially, the colors for nodes 1, 2, 3 are white, black, black, respectively. Denote it by the string WBB.
The first query asks for node 1. The interactor responds with its color W then flips the color of node 3. The colors are now WBW.
The second query asks for node 2. The interactor responds with its color B then flips the color of node 3. The colors are now WBB.
The third query asks for node 3. The interactor responds with its color B then flips the colors of nodes 1 and 2. The colors are now BWB.
The fourth query asks for node 2. The interactor responds with its color W then flips the color of node 3. The colors are now BWW.
Then the correct adjacency matrix is guessed.



Author:
monogon


Editorial:
https://discuss.codechef.com/problems/COLRGRPH


Tags:

               
                 Graphs, Interactive Problems, Constructive, Observation
                 
                     
                     Data Structures, Special, Algorithms
                 
               
             
             



                        Difficulty Rating:
                    

2626


Date Added:
24-07-2021


Time Limit:
1 secs


Source Limit:
50000 Bytes


Languages:
CPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM





Submit

