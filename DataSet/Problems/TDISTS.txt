
Read problems statements in Mandarin Chinese, Russian, and Bengali as well.
A tree is defined as a connected, undirected graph with nn vertices and n−1n−1 edges. The distance between two vertices in a tree is equal to the number of edges on the unique simple path between them.
You are given two integers xx and y. Construct a tree with the following properties:

The number of pairs of vertices with an even distance between them equals x.
The number of pairs of vertices with an odd distance between them equals y.

By a pair of vertices, we mean an ordered pair of two (possibly, the same or different) vertices.
Input
The first line of the input contains a single integer T denoting the number of test cases. Each test case consists of one line containing two space-separated integers x and y.
Output
For each test case, if there is no tree satisfying the given properties, print "NO" (without quotes).
Otherwise, on the first line print "YES" (without quotes). Then print integer n denoting the number of vertices in the tree, followed by n−1 lines describing the edges of the tree in any order. Vertices are numbered from 1 to n. If there are multiple answers, print any of them.
Constraints

1≤T≤100
1≤x,y≤109
x+y≤109

Example Input
4
2 2
29 20
3 12
6 3

Example Output
YES
2
1 2
YES
7
1 2
1 3
2 4
2 5
3 6
3 7
NO
NO

Explanation
In the first test case,  the pairs (1,1) and (2,2) have an even distance, while the pairs (1,2) and (2,1) have an odd distance.



Author:
5★zoooma13


Editorial:
https://discuss.codechef.com/problems/TDISTS


Tags:

               
                 Trees, Greedy, Observation
                 
                     
                     Data Structures, Graphs, Algorithms
                 
               
             
             



                        Difficulty Rating:
                    

2383


Date Added:
10-04-2021


Time Limit:
0.5 secs


Source Limit:
50000 Bytes


Languages:
CPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM





Submit

