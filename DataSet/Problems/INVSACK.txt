
You are given NN and there exists an array of NN items, which only the Chef knows. The i-th item of the array will have a weight (Wi) and a profit (Pi) value associated with it.
You are allowed to ask the chef the value of dp[i][j], for a given i,j where dp[i][j] denotes the maximum amount of profit you can earn if you pick the best subset of items from the first i items of the array such that the sum of the weights of the picked items doesn't exceed j.
Your aim is to determine the weight and profit of each item, i.e recover the W and P array.
You are allowed to query at most 1500 times.
Interaction

The first line of the input contains a single integer N, denoting the number of items in the array.
You need to print to the standard output, for the operations you wish to perform. There are two types of operations:
In the first type, you are asking the judge the value of dp[i][j]. You need to print a single line with 1 i j, where the judge will return a single value by printing the integer in the standard input. It will be the value of dp[i][j].
In the second type, you are telling the judge the answer. For each test case, you should perform this operation exactly once at the end. This operation is not taken into account when counting the number of queries done.You need to print 3 lines:
The first line starts with 2, denoting the type of query.
The second line consists of N integers denoting the W weights array in the format W1 W2 W3 … WN.
The third line consists of N integers denoting the P profits array in the format P1 P2 P3 … PN.

Note
Don't forget to flush the standard output after printing each line. It can be done using fflush(stdout) in C/C++, System.out.flush() in Java and sys.stdout.flush() in Python.
If you exceed 1500 queries OR If in the first type of query, i and j don't satisfy the inequalities 1≤i≤N and 1≤j≤104 OR The W and P in the second type of query don't satisfy the inequality 1≤Wi≤100 and 1≤Pi≤106, for all i∈[1,N] then your program will get the verdict Wrong Answer.
Also note that there is a hidden W and P array and the solution is going to be matched exactly against it, i.e there is a unique solution for each test case.
Constraints

2≤N≤102
For each query of first type: 1≤i≤N and 1≤j≤104
For the query of second type: 1≤Wi≤100 and 1≤Pi≤106, for all i∈[1,N] 

Example
Judge                                          You
2
                                                    1 1 2
0
                                                    1 1 3
2
                                                    1 2 9
3
                                                    1 2 10
5
                                                    2
                                                    3 7
                                                    2 3

Explanation
We get that W=[3,7] and P=[2,3].



Author:
6★sidhant007


Editorial:
https://discuss.codechef.com/problems/INVSACK


Tags:

               
                 Interactive Problems, Bottom-up, Binary Search
                 
                     
                     Special, Algorithms, Dynamic Programming, DP Approach, Searching
                 
               
             
             



                        Difficulty Rating:
                    

N/A


Date Added:
6-12-2019


Time Limit:
2 secs


Source Limit:
50000 Bytes


Languages:
PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM





Submit

