
Superman is currently chasing the Batmobile when he gets a surprise, Batman has installed N Anti-Superman (AS) installations along the road at different positions that shoot at him if he tries to fly above them. In order to pass through this perilous stretch safely, Superman decides to task his disciples to disable the installations. A disciple can start his job from any point on the road, and continue disabling AS installations along the road by moving to each in turn. A disciple chosen for this task needs to be paid R amount for disabling at least one AS installation and additionally the square of the distance traveled as reward. Since Superman hasn't been able to work and earn much since the fighting started, he wants to know what is the minimum amount he needs to pay his chosen disciples to disable all the AS installations.
Input

The first line contains two space separated integers N and R denoting the number of AS installations and the mandatory reward.
The second line contains N space separated integers P1 to PN denoting the positions of the AS installations provided in increasing order.

Output

Output a single line containing an integer denoting the answer.

Constraints

1 ≤ N ≤ 106
1 ≤ R ≤ 109
1 ≤ Pi ≤ 109

Example
Input:
2 10
1 2

Output:
11

Explanation
In the first case, letting one disciple disable both installations (10+1) is cheaper than using two (10+10).
In the second case, two disciples are used. The first one disables the first 2 installations and the second disables the last.



Author:
2★nib_ir


Editorial:
https://discuss.codechef.com/problems/CLDSIN


Tags:

               
                 cole2016, convex-hull, dynamic-programming, medium-hard, nib_ir
                 
               
             
             



                        Difficulty Rating:
                    

N/A


Date Added:
3-02-2016


Time Limit:
1 secs


Source Limit:
50000 Bytes


Languages:
PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, BASH, JS, LISP sbcl, PAS gpc, BF, CLOJ, D, CAML, FORT, ASM, FS, WSPC, LISP clisp, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, SCM chicken, PIKE, SCM qobi, ST, NEM





Submit

