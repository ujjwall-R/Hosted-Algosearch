
Read problem statements in Hindi, Bengali, Mandarin Chinese, Russian, and Vietnamese as well.
Chef is a big fan of soccer! He loves soccer so much that he even invented soccer for dogs! Here are the rules of soccer for dogs:

NN dogs (numbered 11 through N) stand in a line in such a way that for each valid i, dogs i and i+1 are adjacent.
Each dog has a skill level, which is either 1 or 2.
At the beginning of the game, Chef passes a ball to dog 1 (dog 1 receives the ball).
For each valid i, if dog i has skill level s, this dog can pass the ball to any dog with number j such that 1≤|i−j|≤s.
Each dog (including dog 1) may receive the ball at most once.
Whenever a dog receives the ball, it must either pass it to another dog or finish the game by scoring a goal.

While the dogs were playing, Chef also created a game for developers. He defined the result of a game of soccer for dogs as the sequence of dogs which received the ball in the order in which they received it. The last dog in the sequence is the dog that decided to score a goal; if a dog never received the ball, it does not appear in the sequence. In the game for developers, you should find the number of possible results of soccer for dogs.
Find this number of possible results modulo 109+7. Two results of soccer for dogs (sequences of dogs' numbers) are considered different if these sequences have different lengths or if there is a valid index i such that the i-th dog in one sequence is different from the i-th dog in the other sequence.
Input

The first line of the input contains a single integer T denoting the number of test cases. The description of T test cases follows.
The first line of each test case contains a single integer N.
The second line contains N space-separated integers A1,A2,…,AN denoting the skill levels of the dogs.

Output
For each test case, print a single line containing one integer - the number of different results of soccer for dogs, modulo 109+7.
Constraints

1≤T≤10
1≤N≤105
1≤Ai≤2 for each valid i

Subtasks
Subtask #1 (10 points): N≤10
Subtask #2 (30 points): N≤103
Subtask #3 (60 points): original constraints

                        Sample Input 1
                        





3
4
1 1 1 1
3
2 2 2
4
1 2 1 1



                        Sample Output 1
                        





4
5
6


Explanation
Example case 1: The following results are possible: 1, [1,2], [1,2,3], [1,2,3,4].
Example case 2: The following results are possible: [1], [1,2], [1,2,3], [1,3,2], [1,3].



Author:
berezin


Editorial:
https://discuss.codechef.com/problems/CHEFSOC


Tags:

               
                 berezin, dynamic-programming, easy-medium, march19, pattern, taran_1407
                 
               
             
             



                        Difficulty Rating:
                    

2436


Date Added:
9-04-2016


Time Limit:
1 secs


Source Limit:
50000 Bytes


Languages:
PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM





Submit

