
In Domino Solitaire, you have a grid with two rows and NN columns. Each square in the grid contains an integer AA. You are given a supply of rectangular 2×12×1 tiles, each of which exactly covers two adjacent squares of the grid. You have to place tiles to cover all the squares in the grid such that each tile covers two squares and no pair of tiles overlap.
The score for a tile is the diﬀerence between the bigger and the smaller number that is covered by the tile. The aim of the game is to maximize the sum of the scores of all the tiles.
Here is an example of a grid, along with two different tilings and their scores.The score for Tiling 11 is 12 = (9 − 8) + (6 − 2) + (7 − 1) + (3 − 2) while the score for Tiling 22 is 6 = (8 − 6) + (9 − 7) + (3 − 2) + (2 − 1). There are other tilings possible for this grid, but you can check that Tiling 11 has the maximum score among all tilings. Your task is to read the grid of numbers and compute the maximum score that can be achieved by any tiling of the grid.

Your task is to read the grid of numbers and compute the maximum score that can be achieved by any tiling of the grid.
Input Format
The ﬁrst line contains one integer NN, the number of columns in the grid. This is followed by 22 lines describing the grid. Each of these lines consists of NN integers, separated by blanks.
Output Format
A single integer indicating the maximum score that can be achieved by any tiling of the given grid.
Constraints

1≤N≤1051≤N≤105
1≤A≤1041≤A≤104

Subtasks

Subtask 1 (100 points): Original constraints.


                        Sample Input 1
                        





4
8 6 2 3
9 7 1 2



                        Sample Output 1
                        





12


Explanation
Explained in the statement.



Author:
2★yogesh01


Tags:

               
                 DP Approach
                 
                     
                     Algorithms, Dynamic Programming
                 
               
             
             



                        Difficulty Rating:
                    

N/A


Date Added:
15-11-2014


Time Limit:
3 secs


Source Limit:
50000 Bytes


Languages:
PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, BASH, JS, LISP sbcl, PAS gpc, BF, CLOJ, D, CAML, FORT, ASM, FS, WSPC, LISP clisp, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, PIKE, SCM qobi, ST, NEM





Submit

