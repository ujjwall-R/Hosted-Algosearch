
Read problem statements in Hindi, Bengali, Mandarin Chinese, Russian, and Vietnamese as well.
Chef has a sequence of integers A1,A2,…,ANA1,A2,…,AN. He takes a sheet of paper and for each non-empty subsequence BB of this sequence, he does the following:

For each integer which appears in B, count its number of occurrences in the sequence B.
Choose the integer with the largest number of occurrences. If there are several options, choose the smallest one.
Finally, write down the chosen integer (an element of B) on the sheet of paper.

For each integer between 1 and N inclusive, find out how many times it appears on Chef's sheet of paper. Since these numbers may be very large, compute them modulo 1,000,000,007 (109+7).
Input

The first line of the input contains a single integer T denoting the number of test cases. The description of T test cases follows.
The first line of each test case contains a single integer N.
The second line contains N space-separated integers A1,A2,…,AN.

Output
For each test case, print a single line containing N space-separated integers. For each valid i, the i-th of these integers should be the number of occurrences of i on Chef's sheet of paper.
Constraints

1≤T≤100
1≤Ai≤N for each valid i
the sum of N over all test cases does not exceed 500,000

Subtasks
Subtask #1 (20 points): the sum of N over all test cases does not exceed 5,000
Subtask #2 (10 points): A1,A2,…,AN is a permutation of the integers 1 through N
Subtask #3 (70 points): original constraints

                        Sample Input 1
                        





3
3
2 2 3
2
1 2
3
1 2 2



                        Sample Output 1
                        





0 6 1
2 1
3 4 0


Explanation
Example case 3: There are 7 non-empty subsequences:

[1] (Chef writes down 1)
[2] (Chef writes down 2)
[2] (Chef writes down 2)
[1,2] (Chef writes down 1)
[1,2] (Chef writes down 1)
[2,2] (Chef writes down 2)
[1,2,2] (Chef writes down 2)




Author:
7★bthero


Editorial:
https://discuss.codechef.com/problems/SUBSFREQ


Tags:

               
                 Frequency Arrays, Combinatorics, Dynamic Programming, Greedy, Sorting, Observation, Subsequence
                 
                     
                     Data Structures, Arrays, Mathematics, Algorithms, Groupings
                 
               
             
             



                        Difficulty Rating:
                    

2357


Date Added:
3-05-2020


Time Limit:
2 secs


Source Limit:
50000 Bytes


Languages:
CPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM





Submit

