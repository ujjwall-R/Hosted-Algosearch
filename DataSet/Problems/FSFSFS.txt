
 Read problems statements in Mandarin Chinese and Russian as well.

Given a positive integer n, we want to remove some values between 1 and n such that the product of the remaining ones is a perfect square number (i.e. the product = x * x, for some integer x). Meanwhile, we also want to maximize the product. Therefore, we are interested in the number of ways to remove some values to achieve the maximum perfect square product. The answer may be very large, and therefore, you just need to output its remainder by dividing m.


We define the product of an empty set as 1.

Input
The first line contains an integer T denoting the total number of test cases.
In each test case, there are two positive integers n and m in a line separated by a single space.
Output
For each test case, output the answer per line.
Constraints

1 <= T <= 10
1 <= n <= 3,000
1 <= m <= 109 + 7


                        Sample Input 1
                        





2
2 10
5 10



                        Sample Output 1
                        





2
2


Explanation
In the first case, you can either remove 2 or remove both 1 and 2. In the second case, you can either remove 2, 3, 5 or remove 1, 2, 3, 5.



Author:
jingbo_adm


Editorial:
https://discuss.codechef.com/problems/FSFSFS


Tags:

               
                 DP Bitmask, Primes
                 
                     
                     Advanced Algorithms, Advanced DP, Mathematics, Number Theory
                 
               
             
             



                        Difficulty Rating:
                    

3399


Date Added:
9-10-2015


Time Limit:
1 secs


Source Limit:
50000 Bytes


Languages:
PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, BASH, JS, LISP sbcl, PAS gpc, BF, CLOJ, D, CAML, FORT, ASM, FS, WSPC, LISP clisp, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, SCM chicken, PIKE, SCM qobi, ST, NEM





Submit

