
Read problem statements in Bengali, Mandarin Chinese, Russian, and Vietnamese as well.
There are NN people in a train and each of them gets on the train at time t=0t=0.
Each person on the train wants to use the charging station on the train for some amount of time, but unfortunately, the train has only one charging station and can only be used by 1 person at any point in time.
The ith person wants to use the charging station for Ai minutes in total and will leave the train at time Ti.
A person will be satisfied after the journey, only if that person gets to use the charging station for the desired amount of time.
Find a way to schedule the charging such that a maximum number of people is satisfied.
In order to schedule, you can pick any interval of time, say [L,R), and ask the person i to use the charging station from t=L and leave just before t=R.
After this the person i would have spent R−L minutes on the charging station and any person who is still on the train can begin using the charging station starting from t=R.
An interval scheduling will be a set of time intervals and people assigned to those intervals.
A schedule is valid if:

No two intervals in the schedule intersect each other. Note that all [L,R) and [R,S) do not intersect each other.
For all people i and all intervals [L,R) assigned to i, 0≤L≤R≤Ti, i.e. each person is not assigned to an interval of time when they are not on the train.

You have to find optimal scheduling that does not contain more than 2N intervals.
It is guaranteed that there always exists optimal scheduling with the given constraints.
If there are many such schedules, you can output any of them.
Input Format

The first line contains a single integer Q denoting the number of test cases. The description of Q test cases follows.
Each test case contains 3 lines of input.
The first line of each test case contains a single integer N, the number of people on the train.
The second line of each test case contains N space-separated integers, A1,A2,…AN, where Ai is the amount of time that the ith person needs to use the charger.
The third line of each test case contains N space separated integers, T1,T2,…Tn, where Ti is the time at which the ith person leaves the train.

Output Format

For each test case, in the first line, print a single integer M(≤2N), the number of different intervals that you want to schedule.
M lines follow. For each valid i, the ith of these lines should contain three space-separated integers, i,L,R denoting that the person i should use the charging station from [L,R).
The number of satisfied people should be maximum.
The scheduling should be valid.
It is possible to schedule the same person multiple times.
The order in which the intervals are displayed does not matter.

Constraints

1≤Q≤3⋅105
1≤N≤3⋅105
0≤Ai≤3⋅105  for each valid i
0≤Ti≤3⋅105  for each valid i
The sum of N over all testcases does not exceed 3⋅105

Subtasks

Subtask #1 (10 points) : Ti-s are equal for all N people
Subtask #2 (90 points) : Original constraints


                        Sample Input 1
                        





4
5
31 32 6 13 7
14 50 34 4 31
5
43 26 22 11 30
26 4 41 46 49
5
36 40 49 19 37
18 11 48 15 33
5
16 3 24 21 21
24 31 36 49 50



                        Sample Output 1
                        





3
3 0 6
5 6 13
2 13 45
2
4 0 11
3 11 33
0
3
2 0 3
1 3 19
4 19 40


Explanation
Test case 1: Person 1 and Person 4 can never be satisfied because the time they spend on the train (14 and 4 respectively) is less than the amount of time they want to spend for charging. The other three people can be assigned as shown (Person 3 in the interval [0,6), Person 5 in the interval [6,13) and finally Person 2 in the interval [13,45). Note that there are multiple solutions, for example, we could have also assigned Person 5 to [0,7) and Person 3 to [7,13) instead. Both are considered correct.
Test case 2: Person 1 and Person 2 can never be satisfied (they spend less time on the train than the amount of time they need to use the charging station). Among the remaining three, we cannot satisfy all of them, since the total time required would be 30+11+22=63, but t=49, all of them would have left the train. However we can select either Persons 3 and Person 4 or Person 4 and Person 5 and schedule them in any order, and in both cases, both of the persons would be satisfied.
Test case 3: No one can be satisfied and hence the answer is 0.
Test case 4: Apart from Person 2 (who has a very low charging time), we cannot hope to satisfy more than 2 of the others. This is because the sum of the 3 least times is already 58 and everyone would have left the train by t=50. Therefore the maximum number of people we can hope to satisfy is 3, and the given solution constructs it.



Author:
srikkanth_adm


Editorial:
https://discuss.codechef.com/problems/CHARGE


Tags:

               
                 aug21, aug21, constructive, constructive, easy-medium, easy-medium, greedy, greedy, srikkanth_adm
                 
               
             
             



                        Difficulty Rating:
                    

2576


Date Added:
31-07-2021


Time Limit:
1 secs


Source Limit:
50000 Bytes


Languages:
CPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM





Submit

