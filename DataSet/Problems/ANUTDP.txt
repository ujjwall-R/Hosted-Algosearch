
Read problems statements in Mandarin Chinese and Russian as well.
Bob is currently at origin. Bob walks on XX-axis and towards the right. In one move, Bob can either jump 1 unit to the right or 2 units to the right. Some of these coordinates are dirty. Bob wants to know the number of ways going to (Y,0)(Y,0) from (0,0)(0,0). Two ways are considered to be different if there exists an integer j such that the location of Bob after j steps is different.
Sounds like a well known problem? Bob quickly came up with a perfect solution.
A valid path should contain '.' which represents a clean coordinate or '#' which represents a dirty coordinate.
If the length of the path is LEN, then Bob's program calculates and prints number of ways to reach (LEN−1,0) from (0,0).
An integer X is considered to be a good integer if Bob's program prints X for some valid path.
You have to write a program to output Y, where Y is Nth good number in the range L to R. You should also print the valid path that would make Bob's program output Y.
If there are multiple valid paths, you can output any of them. Please see the output section for more details.
Input

The first line of the input contains an integer T, denoting the number of test cases.
Each test case contains 3 space separated integers L, R, and N.

Output
For each test case, output the Nth good number, followed by space, followed by a valid path. If no such number exists, just output −1.
A valid path should contain '.' which represent a clean coordinate or '#' which represents a dirty coordinate.
For example, "..##.." represents 6 coordinates, (0,0) (1,0) … (5.0) out of which (2,0) and (3,0) are dirty.
Constraints

1≤T≤105
0≤L≤R≤108
1≤N≤105

Example Input
4
1 3 1
6 9 3
1 3 3
6 9 4

Example Output
1 .
9 ....#....
3 ....
-1

Explanation
Testcase 1:
Good numbers in range [1,3] are 1, 2, 3. 1st of those is 1. There is one way to reach (0,0) from (0,0).
Testcase 2:
Good numbers in range [6,9] are 6, 8, 9. 3rd of those is 9.
Testcase 4:
There are only 3 good numbers in range [6,9].



Author:
6★anudeep2011


Tester:
6★kostya_by


Editorial:
https://discuss.codechef.com/problems/ANUTDP


Tags:

               
                 DFS, BFS, Sorting, Binary Search
                 
                     
                     Algorithms, Graph Algos, Traversals, Searching
                 
               
             
             



                        Difficulty Rating:
                    

2717


Date Added:
26-09-2014


Time Limit:
2 secs


Source Limit:
50000 Bytes


Languages:
PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, BASH, JS, LISP sbcl, PAS gpc, BF, CLOJ, D, CAML, FORT, ASM, FS, WSPC, LISP clisp, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, PIKE, SCM qobi, ST, NEM





Submit

