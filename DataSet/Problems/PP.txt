
 Read problems statements in Mandarin Chinese and Russian as well.

Given a list of strings S[ 1..N ], you need to count how many ordered pairs of strings are awesome. Given two integers i and j, such that 1 ≤ i, j ≤ n and i ≠ j, an ordered pair ( S[ i ], S[ j ] ) is called awesome if and only if concatenating S[ i ] and S[ j ] gives a palindrome.
Input
The first line contains an integer T denoting the total number of test cases.
In each test case, the first line contains an integer N denoting the total number of strings.
Then, there are N strings, each in a separate line. They only consist of lower case characters.
Output
For each test case, output a single line containing the answer.
Constraints

1 <= T <= 5
In each test case,
1 <= N <= 10^6
Sum of lengths of N strings <= 10^6


                        Sample Input 1
                        





1
3
a
ab
abb



                        Sample Output 1
                        





2


Explanation
ab|a and abb|a



Author:
jingbo_adm


Editorial:
https://discuss.codechef.com/problems/PP


Tags:

               
                 String, Tries, Manachers Algorithm, Rolling Hash
                 
                     
                     Data Structures, Advanced Data Structures, Algorithms, String Algos, Hashing
                 
               
             
             



                        Difficulty Rating:
                    

2667


Date Added:
9-10-2015


Time Limit:
3 secs


Source Limit:
50000 Bytes


Languages:
PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, BASH, JS, LISP sbcl, PAS gpc, BF, CLOJ, D, CAML, FORT, ASM, FS, WSPC, LISP clisp, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, SCM chicken, PIKE, SCM qobi, ST, NEM





Submit

