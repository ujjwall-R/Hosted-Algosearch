
 
Batman has devised a plan to lure Superman to a high rise building. His brilliant plan is to pour concrete over him to immobilize him, and then throw him off the building so that the concrete breaks leaving a shocked and wounded Superman exposed on the ground below for further attack. However, he realizes that the concrete may not break making the feat unimpressive, or if he went too high the fall would kill his enemy, which he can never do. So he decides to carry out trials with many identical Superman-sized concrete blocks to find out the minimum floor from which if thrown the block will break when it hits the ground below. He wants to know what is the maximum number of times he will have to drop a block from the building if he uses an optimal method to determine the critical floor from and above which the blocks always break. 
NOTE: A block which did not break after falling can be reused. It is possible that block may not break even when thrown from the highest floor.
 
Input

The first line of the input contains an integer T denoting the number of test cases.
Each test case contains a single line with two integers N and H denoting the number of concrete blocks Batman has prepared and the number of floors of the building respectively.

 
Output

For each test case output one line containing a single integer denoting the answer.

 
Constraints

1 ≤ T ≤ 10000
1 ≤ N ≤ 5000
1 ≤ H ≤ 5000



Example

Input:
1
1 10

Output:
10

Explanation
Batman has no choice but to drop his single concrete block from each floor starting from the bottom until it breaks or he reaches the top floor.



Author:
2★nib_ir


Editorial:
https://discuss.codechef.com/problems/CLDROP


Tags:

               
                 cole2016, dynamic-programming, easy-medium, nib_ir
                 
               
             
             



                        Difficulty Rating:
                    

N/A


Date Added:
2-02-2016


Time Limit:
1 secs


Source Limit:
50000 Bytes


Languages:
PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, BASH, JS, LISP sbcl, PAS gpc, BF, CLOJ, D, CAML, FORT, ASM, FS, WSPC, LISP clisp, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, SCM chicken, PIKE, SCM qobi, ST, NEM





Submit

