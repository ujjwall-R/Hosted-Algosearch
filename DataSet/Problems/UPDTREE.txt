
 Read problems statements in English, Mandarin Chinese and Russian as well.
You have a tree consisting of N vertices numbered 1 to N.
Initially each edge has a value equal to zero. You have to first perform M1 operations and then answer M2 queries. Note you have to first perform all the operations and then answer all queries after all operations have been done.
Operations are defined by:
A B C D: On the path between nodes numbered A and B increase the value of each edge by 1, except for those edges which occur on the path between C and D. Note that there is an unique path between every pair of nodes ie. we don't consider values on edges for finding the path. All four values given in input will be distinct.

Queries are of the following type:
E F: Print the sum of values of all the edges on the path between two distinct nodes E and F. Again the path will be unique.

Input
Input description.
First line contains N, M1 and M2. Each of the next N-1 lines contain two integers u v denoting an undirected edge between node numbered u and v. Each of the next M1 lines contain four integers Ai Bi Ci Di, denoting the operations. Each of the next M2 lines contain two integers Ei Fi denoting the queries.
Output
For each query, print the required answer in one line.
Constraints
1 ≤ N ≤ 105
1 ≤ M1, M2 ≤ 5*105
1 ≤ Ai, Bi, Ci, Di, Ei, Fi ≤ N
 
Example
Input:
5 2 2
1 2
2 4
2 5
1 3
1 4 2 3
3 4 2 5
4 5
4 3

Output:
2
4

Explanation
On first operation, value of edge (2-4) is increased by one. On second operation, value of edges (1-3), (1-2), (2-4) are increased by one.
Warning:Use fast input/output. Large input files.
            
            
            
            
            
        

        


Author:
4★darkshadows


Editorial:
https://discuss.codechef.com/problems/UPDTREE


Tags:

               
                 HLD, Lowest Common Ancestor, DFS
                 
                     
                     Advanced Algorithms, Advanced Graph Algos, Algorithms, Graph Algos, Traversals
                 
               
             
             



                        Difficulty Rating:
                    

2806


Date Added:
15-09-2014


Time Limit:
3.5 secs


Source Limit:
50000 Bytes


Languages:
PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, BASH, JS, LISP sbcl, PAS gpc, BF, CLOJ, D, CAML, FORT, ASM, FS, WSPC, LISP clisp, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, PIKE, SCM qobi, ST, NEM





Submit

