
Read problem statements in Mandarin, Bengali, Russian, and Vietnamese as well.
There is an N×NN×N matrix. Let (i,j)(i,j) denote the cell in the i-th row and the j-th column, where the rows are numbered 0,1,…,N−1 from top to bottom and the columns are numbered 0,1,…N−1 from left to right. There is a hidden cell (a,b). It  is known that this cell doesn't lie on the boundary of the matrix. That is, min(a,b)≥1 and max(a,b)<N−1.
Your task is to recover the hidden cell. You can ask queries, in which you give the judge a matrix M of size N×N, consisting of zeroes and ones. Let's call a cell (i,j) valid if (i,j)=(a,b) or Mi,j=1. The judge replies whether there exists a path from (0,0) to (N−1,N−1) consisting of only valid cells, moving only down and right.
Formally, it tells whether there exits a sequence of 2N−1 cells (0=u0,0=v0),(u1,v1),…,(N−1=u2N−2,N−1=v2N−2), such that (ui,vi) is a valid cell for all i and either (ui+1=ui,vi+1=vi+1) or (ui+1=ui+1,vi+1=vi).
The score of your submission is a function of the number of queries asked. Please refer to the scoring section for more details.
Note that the grader is not adaptive, which means that the hidden cell is fixed in the beginning and won't change according to the queries you ask.
Input

First, you should read a single integer T, the number of test cases.
For each test case, first read the value of N.
To make a query, you should first print ? on a new line. Then you should print N lines each containing a string of N characters denoting the matrix M.
If the query format is incorrect (i.e. if the matrix doesn't have dimensions N×N or if some character in the matrix is not 0 or 1), or if you have asked more than 120 queries, the judge prints -1, and exits with a wrong answer verdict. In this case, you must also terminate your program.
Once you know the hidden cell, print a character ! on a new line. In the next line, print two space-separated integers a and b, the row and column numbers of the hidden cell respectively.
If your answer is incorrect, the judge prints -1 and exits  with a Wrong Answer verdict. In this case, you must terminate your program as well. Otherwise, the judge prints 1, and you should move to the next test case (if any).

Note that whenever the judge prints −1, you should immediately terminate your program to receive a Wrong Answer verdict; otherwise, you may receive any verdict. Don't forget to flush the output after printing each line!
Test Data and Scoring
Each test file has exactly 50 test cases all with N=50.
Let Q be the maximum number of queries asked by you over all the test cases of all the test files.

If Q>120, you get 0 points.
If 61≤Q≤120, you get 9 points.
If 51≤Q≤60, you get 24 points.
If Q≤50, you get 54+⌊46×(50−max(Q,14))36⌋ points, where ⌊x⌋ denotes the largest integer ≤x.  In particular, you get 54 points if Q=50 and 100 points if Q≤14. 

Interaction Example
You                     Grader
                        3           # 3 test cases
                        4           # N = 4
?
1100
0100
0001
1111
                        1           # The judge tells that there is
                                    # a valid path.
!
2 1

                        1           # Correct answer! 

                        4           # Next test case, N = 4

?
1000
0000
0010
0001
                        0           # There doesn't exist a path
!
2 2
                        -1          # Incorrect output! Judge exits
You should also
terminate here
without reading
the next test case

Explanation
Please note that a small value of T,N is used for explanation purposes. In all the actual tests, T=50,N=50.
In the first example, (2,1) is the hidden cell. You ask the query:
1100
0100
0001
1111

The path (0,0)→(0,1)→(1,1)→(2,1)→(3,1)→(3,2)→(3,3) consists of only valid cells and the judge replies with 1.
In the second test case, the hidden cell is (1,1). When you ask the query
1000
0000
0010
0001

Only all the diagonal cells are valid. There is no path from (0,0) to (3,3) passing only through valid cells, so the judge replies with 0.



Author:
7★jtnydv25


Editorial:
https://discuss.codechef.com/problems/HIDECELL


Tags:

               
                 Interactive Problems, Binary Search
                 
                     
                     Special, Algorithms, Searching
                 
               
             
             



                        Difficulty Rating:
                    

3267


Date Added:
16-06-2021


Time Limit:
1 secs


Source Limit:
50000 Bytes


Languages:
CPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM





Submit

