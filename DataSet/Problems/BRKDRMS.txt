
You are given a string SS of length NN, containing lowercase Latin letters. You are also given an integer K.
You would like to create a new string S′ by following the following process:

First, partition S into exactly K non-empty subsequences S1,S2,…,SK. Note that every character of S must be present in exactly one of the Si.
Then, create S′ as the concatenation of these subsequences, i.e, S′=S1+S2+…+SK, where + denotes string concatenation.

Determine the lexicographically smallest S′ that can be created.
Input Format

The first line of input contains a single integer T, denoting the number of test cases. The description of T test cases follows.
The first line of each test case contains two space-separated integers, N and K.
The second line of each test case contains the string S.

Output Format
For each test case, output on a new line the lexicographically smallest string S′ that can be created.
Constraints

1≤T≤1000
1≤N≤105
1≤K≤N
S contains only lowercase Latin letters.
Sum of N over all cases won't exceed 2⋅105.


                        Sample Input 1
                        





3
6 1
whizzy
14 2
aaacdecdebacde
4 3
dbca



                        Sample Output 1
                        





whizzy
aaaaccdecdebde
abcd


Explanation
Test Case 1: K=1, so our only option is to set S′=S1=whizzy.
Test Case 2: Partition S=aaacdecdebacde into S1=aaaac and S2=cdecdebde, to form S′=aaaaccdecdebde.
Test Case 3: Partition S=dbca into S1=a, S2=bc, and S3=d to form S′=abcd.
In both test cases 2 and 3, it can be shown that no other partition gives a lexicographically smaller S′.



Author:
6★munch_01


Editorial:
https://discuss.codechef.com/problems/BRKDRMS


Tags:

               
                 easy-medium, greedy, munch_01, start28, strings
                 
               
             
             



                        Difficulty Rating:
                    

3084


Date Added:
28-02-2022


Time Limit:
1 secs


Source Limit:
50000 Bytes


Languages:
CPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM





Submit

