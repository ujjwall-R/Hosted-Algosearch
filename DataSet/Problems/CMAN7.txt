
Chef and Cheffa  tickets seller for a theatre. At the end of the month they calculate total revenue generated by tickets sold by them. But this time they forgot to keep records of the ticket prices. Chef had kept those tickets safe with him, but they are arranged randomly. 
Both of them decide to share the amount of work by deciding following things:

Chef will calculate the sum of the ticket prices having an odd digit at units place of ticket number and Cheffa will calculate that of the tickets having even digit at units place of the ticket number.
There is separate tax deduction on each ticket of based on the unit place digit hence the final sum should not contain these taxes. 

Chef will not be convinced by the total number of tickets he found if the number of tickets found by him is different from that of Cheffa. He thinks that he might have lost some tickets, so for that he tries to make the number of odd digit and even digit tickets equal by adding some virtual tickets to the lesser one.
The tax on each of those virtual tickets will be the average of tickets of that type i.e. odd type or even type.
Chef wants to calculate sum and virtual sum i.e. sum after adding those virtual tickets.
For the case in which the number of tickets of both type are not same, Chef wants to calculate sum and virtual sum i.e. sum after adding those virtual tickets where the prices of each of those virtual ticket will be considered as mean of the ticket price of the ticket with unit digit appearing least number of times in that type (odd type or even type) i.e. the type of ticket present in less number than other.(If two numbers occur same no. of times, consider the one with larger numerical value)
If there are only odd or only even type of tickets then chef only wants to know the sum of the prices of tickets of even and odd type.
Input:

The first line of input contains a single integer T, the total no. of test cases. The description of T test cases follows.
First line of each test case consists of a single integer N, total no. of tickets.
Second line of each test case contains of N integers A1,A2,A3,…,An, the digits at units place of each ticket number.
Third line of each test case contains of N integers P1,P2,P3,…,Pn the corresponding ticket prices.
Fourth line of each test case consists of 10 integers X0,X1,X2,…,X9 taxes on ticket of each type of unit digit.

Output:

The first line of output should be “1” (without quotes) if total no of tickets of both type (odd & even) is different else it should print “0”(without quotes).
For “0” second line of output should consist of two integers O and E denoting the sum of tickets with odd unit digit and even unit digit respectively.
For “1” second line of output should consist of two integers S and V denoting the total original sum of tickets and total sum of the ticket prices after addition of virtual tickets respectively.

Constraints:

1 \leq T \leq 1000
1 \leq N \leq 10^5
1 \leq Ai,Pi,Xi \leq 10^9

Sample Input:
5
6
0 1 2 3 4 5
2 2 2 2 2 2
1 0 1 0 1 0 1 1 1 1
5
1 2 3 4 5
2 2 2 2 2
1 0 1 0 1 0 1 1 1 1
9
0 1 2 3 4 5 6 7 8
1 2 1 2 1 2 1 2 1 
0 1 0 1 0 1 0 1 0 1
3
1 1 1
2 2 2
0 0 0 0 0 0 0 0 0 0
12
0 0 1 1 2 2 3 4 5 7 9 9
5 10 5 10 5 10 5 10 5 10 5 10
1 1 1 1 1 1 1 1 1 1

Sample Output:
0
6 3
1
8 9
1
9 10
0
6 0
1
78 96

Explanation:
Example case 1:

0,2 and 4 have sum 6 and after deduction of taxes it becomes 6.
1,3 and 5 have sum 6 and after deduction of taxes it remains 6




Author:
1★vishalmourya


Editorial:
https://discuss.codechef.com/problems/CMAN7


Tags:

               
                 c-plus-plus, cakewalk, cman2020, codechef, easy, number-theory, strings, vishalmourya
                 
               
             
             



                        Difficulty Rating:
                    

N/A


Date Added:
29-03-2020


Time Limit:
1 secs


Source Limit:
50000 Bytes


Languages:
CPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM





Submit

